% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/view.R
\name{ms_view}
\alias{ms_view}
\title{Create a view from an sf object}
\usage{
ms_view(
  aoi = NULL,
  srs = "laea",
  dt,
  dx,
  dy,
  start = NULL,
  end = NULL,
  agg = "median",
  rsmp = "bilinear"
)
}
\arguments{
\item{aoi}{An sf object from which the spatial extent for the view is derived.}

\item{srs}{Either a character vector with 'laea' or 'utm' for automatic
construction of a CRS, or a valid CRS object created with \code{sf::st_crs()}}

\item{dt}{A character vector determining the temporal resolution of the view.}

\item{dx}{A numeric vector determining the spatial resolution in x direction.}

\item{dy}{A numeric vector determining the spatial resolution in y direction.}

\item{start}{A character vector determining the start date-time of the view.}

\item{end}{A character vector determining the end date-time of the view.}

\item{agg}{A character vector determining the method used to aggregate pixels
that fall into the same time-step.}

\item{rsmp}{A character vector determining the method used to resample pixels
to the new spatial extent.}
}
\value{
A cube_view object.
}
\description{
Helper function to create a cube view based on the bounding box of a user supplied
aoi sf-object. Youn can either choose to automatically derive a
\href{https://proj.org/operations/projections/laea.html}{Lambert Azimuthal Equal Area  (LAEA)}
or a \href{https://proj.org/operations/projections/utm.html}{Universal Transverse Mercator (UTM)}
projection for their study area. Both will use the WGS84 ellipsoid. You can
also chose to supply a valid crs object. In this case the supplied CRS will be
used as-is. You also need to supply the spatial and temporal resolution for your
view as well as the start and end date-time for your analysis. See \code{gdalcubes::cube_view()}
for more information
}
\examples{
library(sf)
(view <- system.file("aoi_S2.gpkg", package="mscomposer")) |>
  st_read(quiet = TRUE) |>
  ms_view(
    srs="utm",
    dt = "P1M",
    dx = 10,
    dy = 10,
    start = "2018-01-01T00:00:00",
    end = "2018-12-31T23:59:59",
    agg = "median",
    rsmp = "bilinear")
}

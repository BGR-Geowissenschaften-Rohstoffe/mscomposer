% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compose.R
\name{ms_compose}
\alias{ms_compose}
\title{Multi-Spectral Image Composite Generation}
\usage{
ms_compose(
  files = NULL,
  format = "Sentinel2_L2A",
  view = NULL,
  col = tempfile(fileext = ".sqlite"),
  mask = NULL,
  bands = NULL,
  reducers = NULL,
  indices = NULL,
  filters = NULL,
  outdir = NULL,
  prefix = "composite-",
  ...
)
}
\arguments{
\item{files}{A character vector with the file paths to the individual
images band files.}

\item{format}{A character vector of the format to use or file to a \code{.json}
file with a default format (see \code{gdalcubes::collection_formats()})}

\item{view}{A cube view object either created using mscompose::view() ord gdalcubes::cube_view().}

\item{col}{A path to an image collection created during a previous call of this function
or a path where the collection should be written to.}

\item{mask}{A mask object created with \code{gdalcubes::image_mask()}.}

\item{bands}{A character vector of the bands you wish to retain in the output.
Note, that all bands needed for the indices calculation also need to be appear
here.}

\item{reducers}{A character vector for the method used for the final reduction
of the temporal dimension (see \code{gdalcubes::reduce_time.cube()})}

\item{indices}{A named list containing the band specific formula
for one or more spectral indices to add to the cube (see \code{gdalcubes::apply_pixel.cube()}).}

\item{filters}{A named list containing band/index specific conditions, which only
retain those pixels where the conditions evaluate to TRUE (see \code{gdalcubes::filter_pixel()}).}

\item{outdir}{A path to a directory where the output file will be written to.}

\item{prefix}{A character used as a pre-fix for the output file.}

\item{...}{Additional arguments for \code{gdalcubes::write_tif()}}
}
\value{
Nothing, called for its side-effect to write a file to disk
}
\description{
Composing an Analysis-Ready-Dataset based on spatially and temporally
diverse tiles over a large Area-of-Interest (AOI) can be a cumbersome process.
Using the gdalcubes package, it is almost trivial to calculate a harmonized
dataset over a given AOI. This function allows you to supply a number of
multi-spectral images and it will output a harmonized coverage of the spatial extent.
Choose the dx, dy, and srs arguments to get the results in your preferred
CRS and spatial resolution. Choose dt close to the temporal sampling over your
AOI, e.g. 12 days. Based on the chosen reducer, the temporal dimension will
be reduced before the output is created. If you wish to obtain results for
different time periods, divide your input files accordingly and call the
function multiple times.
}
\examples{
# load required libraries
if (FALSE){
library(sf)
library(gdalcubes)
library(mscomposer)

# parameter definitions
s2_files <- list.files(
              system.file("extdata/Sentinel2/", package="mscomposer"),
              pattern = ".jp2$", full.names = TRUE, recursive = TRUE)
format <- system.file("Sentinel2_L2A_flat.json", package = "mscomposer")
indices <- list(NDVI = "(B08-B04)/(B08+B04)")
filters <- list(NDVI = "NDVI < 0.2")
aoi <- st_read(system.file("aoi_S2.gpkg", package="mscomposer"))
cv <- ms_view(
  aoi = aoi,
  srs = "utm",
  dt = "P14D",
  dx = 10,
  dy = 10,
  start = "2018-01-01T00:00:00",
  end = "2018-12-31T23:59:59",
  agg = "median",
  rsmp = "bilinear")
mask = image_mask("SCL", values = c(1,3,6,8,9,10,11))
bands = c("B02", "B03", "B04","B08")
reducer = "median"
outdir = tempdir()
prefix = "median-composite-"

# function call
ms_compose(
  s2_files,
  format,
  view=cv,
  col = file.path(tempdir(), "S2.sqlite"),
  mask=mask,
  bands=bands,
  reducers=reducer,
  indices=indices,
  filters=filters,
  outdir=outdir,
  prefix=prefix
 )
}
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.R
\name{ms_predict}
\alias{ms_predict}
\title{Train a random forest model and predict on a raster}
\usage{
ms_predict(
  samples,
  colname,
  predictors,
  model_method = "rf",
  cv_method = "LOOCV"
)
}
\arguments{
\item{samples}{An sf object containing only POINT geometries.}

\item{colname}{A charachter indicating an existing column in \code{samples} with the
response variable. This variable must be \code{numeric}.}

\item{predictors}{A SpatRaster object with the predictor variables.}

\item{model_method}{Model type to be used for training. See \url{https://topepo.github.io/caret/available-models.html}.
Note, that you might need to install additional dependencies before using any of
the listed methods.}

\item{cv_method}{A method for \code{trainControl} indicating the cross-validation
strategy to be used. Defaults to \code{LOOCV}, meaning Leave-One-Observation-Out
Cross-Validation.}
}
\value{
A list object with names prediction, model, metrics, and data.
}
\description{
This function can be used to train a basic random forest model based
on an sf-object with point location and specific measurements as well as
a raster dataset with predictors. You will have to specify the column name
of the variable to be modeled. The function returns a list with the predicted
raster, the model, an accuracy metrics object as well as the extracted
data object with the extracted predictors and the predictions and observations
at the point locations.
}
\examples{
library(sf)
library(terra)
library(mscomposer)

samples <- system.file("corg-simulated-sample.gpkg", package = "mscomposer") |>
  read_sf()
predictors <- system.file("soil-composite.tif", package = "mscomposer") |>
  rast()
results <- ms_predict(
  samples,
  "corg",
  predictors,
  model_method = "rf",
  cv_method = "LOOCV"
 )

print(str(results, 1))
}
